type DeleteManyPayload {
  deletedCount: Int!
}

type InsertManyPayload {
  insertedIds: [ObjectId]!
}

type Mutation {
  deleteManyWalks(query: WalkQueryInput): DeleteManyPayload
  deleteOneWalk(query: WalkQueryInput!): Walk
  insertManyWalks(data: [WalkInsertInput!]!): InsertManyPayload
  insertOneWalk(data: WalkInsertInput!): Walk
  replaceOneWalk(data: WalkInsertInput!, query: WalkQueryInput): Walk
  updateManyWalks(query: WalkQueryInput, set: WalkUpdateInput!): UpdateManyPayload
  updateOneWalk(query: WalkQueryInput, set: WalkUpdateInput!): Walk
  upsertOneWalk(query: WalkQueryInput, data: WalkInsertInput!): Walk
}

scalar ObjectId

type Query {
  walk(query: WalkQueryInput): Walk
  walks(query: WalkQueryInput, limit: Int = 100, sortBy: WalkSortByInput): [Walk]!
}

type UpdateManyPayload {
  matchedCount: Int!
  modifiedCount: Int!
}

type Walk {
  Distance_Walked: Float
  Dog_Name: String
  Time_Walked: Int
  UNIX_Timestamp: Int
  Walker_Address: String
  Walker_Name: String
  _id: ObjectId
}

input WalkInsertInput {
  Time_Walked: Int
  UNIX_Timestamp: Int
  Walker_Address: String
  Walker_Name: String
  _id: ObjectId
  Distance_Walked: Float
  Dog_Name: String
}

input WalkQueryInput {
  Walker_Address_ne: String
  Walker_Address_in: [String]
  Time_Walked_lte: Int
  Time_Walked_gte: Int
  Dog_Name_lte: String
  _id_lt: ObjectId
  Distance_Walked_lte: Float
  UNIX_Timestamp_nin: [Int]
  Time_Walked: Int
  Walker_Name: String
  UNIX_Timestamp_exists: Boolean
  UNIX_Timestamp_lt: Int
  Walker_Name_ne: String
  Dog_Name: String
  _id_exists: Boolean
  Time_Walked_gt: Int
  Distance_Walked_lt: Float
  Time_Walked_in: [Int]
  Walker_Name_gte: String
  Walker_Address_exists: Boolean
  Dog_Name_gt: String
  _id_ne: ObjectId
  Walker_Address_lt: String
  Walker_Name_exists: Boolean
  Time_Walked_ne: Int
  Time_Walked_nin: [Int]
  Walker_Address_gt: String
  Dog_Name_in: [String]
  Dog_Name_lt: String
  Walker_Name_lt: String
  Distance_Walked_gte: Float
  Dog_Name_exists: Boolean
  Walker_Name_lte: String
  _id_gte: ObjectId
  _id_lte: ObjectId
  UNIX_Timestamp_gt: Int
  UNIX_Timestamp_ne: Int
  OR: [WalkQueryInput!]
  UNIX_Timestamp: Int
  Walker_Address_gte: String
  Dog_Name_nin: [String]
  Walker_Name_in: [String]
  Time_Walked_lt: Int
  _id_in: [ObjectId]
  Walker_Address: String
  Distance_Walked_ne: Float
  UNIX_Timestamp_in: [Int]
  _id: ObjectId
  Dog_Name_ne: String
  Walker_Address_lte: String
  Dog_Name_gte: String
  Walker_Name_gt: String
  _id_gt: ObjectId
  Time_Walked_exists: Boolean
  _id_nin: [ObjectId]
  Distance_Walked: Float
  Walker_Name_nin: [String]
  UNIX_Timestamp_lte: Int
  Distance_Walked_exists: Boolean
  Distance_Walked_nin: [Float]
  Walker_Address_nin: [String]
  Distance_Walked_gt: Float
  UNIX_Timestamp_gte: Int
  AND: [WalkQueryInput!]
  Distance_Walked_in: [Float]
}

enum WalkSortByInput {
  DOG_NAME_DESC
  TIME_WALKED_ASC
  WALKER_ADDRESS_ASC
  _ID_ASC
  WALKER_ADDRESS_DESC
  WALKER_NAME_DESC
  WALKER_NAME_ASC
  DISTANCE_WALKED_DESC
  DOG_NAME_ASC
  TIME_WALKED_DESC
  UNIX_TIMESTAMP_DESC
  _ID_DESC
  DISTANCE_WALKED_ASC
  UNIX_TIMESTAMP_ASC
}

input WalkUpdateInput {
  Distance_Walked: Float
  Time_Walked_inc: Int
  UNIX_Timestamp_inc: Int
  Walker_Address_unset: Boolean
  UNIX_Timestamp_unset: Boolean
  Walker_Name: String
  Walker_Name_unset: Boolean
  Dog_Name_unset: Boolean
  Walker_Address: String
  _id_unset: Boolean
  Dog_Name: String
  Time_Walked_unset: Boolean
  Distance_Walked_unset: Boolean
  UNIX_Timestamp: Int
  _id: ObjectId
  Distance_Walked_inc: Float
  Time_Walked: Int
}
